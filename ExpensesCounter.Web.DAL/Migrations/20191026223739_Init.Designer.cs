// <auto-generated />
using System;
using ExpensesCounter.Web.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ExpensesCounter.Web.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20191026223739_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ExpensesCounter.Web.DAL.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<double>("Count");

                    b.Property<DateTimeOffset>("CreatedDateUtc");

                    b.Property<int>("ExpenseListId");

                    b.Property<DateTimeOffset>("UpdatedDateUtc");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseListId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ExpensesCounter.Web.DAL.Entities.ExpensesList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTimeOffset>("CreatedDateUtc");

                    b.Property<string>("Title");

                    b.Property<DateTimeOffset>("UpdatedDateUtc");

                    b.HasKey("Id");

                    b.ToTable("ExpensesLists");
                });

            modelBuilder.Entity("ExpensesCounter.Web.DAL.Entities.ExpensesListUser", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("ExpenseListId");

                    b.Property<DateTimeOffset>("AssignedDateUtc");

                    b.Property<bool>("IsActiveAssign");

                    b.HasKey("UserId", "ExpenseListId");

                    b.HasIndex("ExpenseListId");

                    b.ToTable("UserLists");
                });

            modelBuilder.Entity("ExpensesCounter.Web.DAL.Entities.RefreshToken", b =>
                {
                    b.Property<string>("Token")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedDateUtc");

                    b.Property<int>("UserId");

                    b.HasKey("Token");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("ExpensesCounter.Web.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthday");

                    b.Property<DateTimeOffset>("CreatedDateUtc");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<DateTimeOffset>("LastLoginUtc");

                    b.Property<string>("LastName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<DateTimeOffset>("RegisterDateUtc");

                    b.Property<DateTimeOffset>("UpdatedDateUtc");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExpensesCounter.Web.DAL.Entities.Expense", b =>
                {
                    b.HasOne("ExpensesCounter.Web.DAL.Entities.ExpensesList", "ExpenseList")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExpensesCounter.Web.DAL.Entities.ExpensesListUser", b =>
                {
                    b.HasOne("ExpensesCounter.Web.DAL.Entities.ExpensesList", "ExpensesList")
                        .WithMany("Users")
                        .HasForeignKey("ExpenseListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExpensesCounter.Web.DAL.Entities.User", "User")
                        .WithMany("ExpensesLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExpensesCounter.Web.DAL.Entities.RefreshToken", b =>
                {
                    b.HasOne("ExpensesCounter.Web.DAL.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
